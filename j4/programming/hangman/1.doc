**** この文書は印刷してはならない：地球にやさしいエコライフ ****

1 テーマ
  ゲーム“hangman”を簡略化したプログラムを作成する．“hangman”は，古くから UNIX オペレーティングシステムに付属してきた由緒正しい，ただし，きわめて趣味の悪いゲームである．

2 hangman のルール
2.1 概要
  “hangman”は未知の単語のスペリングを当てるクイズである．
  最初，単語のスペリングは全く分からない（単語の文字数だけが分かっている）．

	単語:-------
	使われた文字:
	残り回数:7
	文字を入力して下さい:a

  プレイヤは，その単語に含まれていると思う文字（たとえば a）を入力する．もし，実際にその文字が単語に含まれているなら，文字が使われている位置が示される．

	単語:-a---a-
	使われた文字:a
	残り回数:7
	文字を入力して下さい:

  プレイヤの入力した文字が問題の単語に含まれていないときは，文字入力の残り回数が減少する．
  残り回数が 0 になるまでに綴りを当てることがゲームの目標である．

2.2 ゲームの設定
  プレイヤは，1 回に 1 文字の英小文字を入力できる．ただし，すでに使った文字は，受け付けられない（明らかに入力ミスなので）．
  一つの単語当てにつき，6 回までの間違い（単語に含まれない文字を入力すること）が許される．7 回間違えたら，ゲームオーバになる．

3 課題
  “hangman”プログラムを作成する．
  プログラムの基本的な動作は

    /home/jugyou/j4/prog_enshuu/2012-prog_enshuu/hangman/hangman_euc
    (文字化けする場合は hangman_utf を試す)

と同じでなくてはならないが，画面表示のレイアウトまでまねる必要はない．

  次の各発展課題に取り組んだ場合は，評価に反映する．

(1) 単語を辞書ファイルから読み込む
  問題の単語を，スペルチェック用の単語ファイル

    /home/jugyou/j4/prog_enshuu/2012-prog_enshuu/hangman/words

から読み込むようにしなさい．
  単語ファイルをコマンドラインオプションなどで指定できると，なおよい．

(2) 不正解単語の一覧を表示する
  プログラムを終了するときに，今回間違えた単語の一覧を表示しなさい．

(3) 正解率等を表示する
  プログラムを終了するときに，今回および累積の正解数/不正解数/正解率を表示しなさい．
  
4 文字入力関数
  通常，scanf()等を使ってキーボードから文字を入力する場合，Enter キーが押されるまで入力関数から戻ってこない．これに対して，hangman のサンプルプログラムでは，1 文字入力ごとに，ただちにプログラムが反応し，さらに入力文字が画面にエコーされない．このような動作をさせるための関数 getChar() を用意したので，必要なら利用してよい．

  getChar() の仕様は次のとおりである．

    関数名:getChar
    引数  :なし
    戻り値:入力された文字（型:char）
    ヘッダ:termio.h
    機能  :標準入力から 1 文字入力する．入力があるとただちに戻る
    補足  :入力文字をエコーしない

5 設計
  ここでは，hangman プログラムを設計する際のヒントを述べる．独力で良いプログラムを組む自信がない場合には，参考にするとよい．

5.1 本プログラムで扱う情報
  本課題で扱う主要な情報は，おそらく次の四つになると思われる．

    ・正解の単語
    ・使われた文字の集合
    ・当たった部分がどこかを示すデータ
    ・間違い回数（またはあと何回間違えることが許されるか）

  プログラムを作り始める前に，これらの情報の表現方法（どういう変数を使うか）を 検討しなさい．ただし，上の 4 項目をそれぞれ一つの変数で表す必要はない．
  たとえば，単語中のどの文字が当てられたかは，正解の単語と使われた文字の集合がわかっていれば導き出せるはずなので，必ずしもデータとして持たなくてよい．逆に，ある情報を表すのに複数の変数を用いるのも，もちろん構わない．

5.2 検証
  考えたデータ表現が，実際にうまく機能するかを検証する．たとえば，

      正解の単語      ：programming
      ユーザの入力文字：e r s p a m b r s m ...

とした場合，各変数の値がどう変化してゆくか机上で追跡しなさい．

6 レポート
  次の内容を含む最終レポートを，

    *** 5/21（火）授業の前 ***

までに提出しなさい．レポートは次の内容を含むこと．

(1) プログラムの仕様（外部仕様，内部仕様）
      ・プログラムの機能
      ・プログラムの使い方
      ・情報をどのようなデータ（データ構造）で表現したかの説明
      ・各関数の仕様（引数，戻り値，処理内容）

(2) プログラムの正しさの検証の結果
      たとえば：
      ・ゲームクリア，ゲームオーバの処理が正しく行なわれていることの確認
      ・想定外の文字を入力されても破綻しないことの確認

(3) 問題点など
      ・設計，コーディングの過程で分かった問題点と，それに対する改善案
          効率，プログラムの分かりやすさ，機能を拡張する場合の容易さなど

(4) 付録としてプログラムリスト
      ・適切なコメントを含むこと
      ・インデントをつけるなど，読みやすさに配慮すること
      ・2段組フォーマットが望ましい（紙資源を大切にしよう）

    *** プログラムは，レポートとは別に電子メールでも提出すること ***

※実装した拡張機能をレポート中に示すこと．たとえば

  ・辞書ファイルからの単語読込み
  ・正解率の記録と表示（今回，過去からの累積）
  ・不正解単語をファイルに保存しておき，次回その中から出題する「苦手克服モード」

レポート提出先
・学籍番号に応じて，各教官のレポートボックスに提出する．所定の表紙を用い，共同
  実験者以外の項目はもれなく記入すること．
・レポートとは別に，プログラムリストを電子メールで提出する．

  学籍番号が奇数→丸山  maruyama@j.kisarazu.ac.jp
          偶数→     oeda@j.kisarazu.ac.jp

